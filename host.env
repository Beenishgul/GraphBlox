#!make
# =========================================================
#                GENERAL DIRECTOIRES HOST               
# =========================================================
ROOT_DIR                = $(shell cd .. ; pwd)
APP_DIR                 = $(shell basename "$(PWD)")
HOST_DIR                = 00_host
DEVICE_DIR              = 01_device
BENCH_DIR               = 02_test_graphs
# =========================================================

ifeq ($(shell cd . ; git log -1 --pretty=format:"%h" 2>/dev/null),)
	GIT_VER = 1
else
	GIT_VER = $(shell cd . ; git log -1 --pretty=format:"%h" 2>/dev/null)
endif

ifeq ($(shell /usr/bin/hostnamectl --transient 2>/dev/null),)
	HOST_NAME  = default
else
	HOST_NAME  = $(shell /usr/bin/hostnamectl --transient 2>/dev/null)
endif

# =========================================================
# CLI Commands                           
# =========================================================
ECHO    := @echo
# =========================================================
# Color coded messages                      
# =========================================================
YELLOW  =\033[0;33m
GREEN   =\033[0;32m
BLUE    =\033[0;34m
RED     =\033[0;31m
NC      =\033[0m
# =========================================================

# =========================================================
#                APP HOST PROPERTIES    
# =========================================================

# =========================================================
# Application name 00_GLay/src/main folder (glay.c) 
# =========================================================
APP  = glay
# =========================================================

# =========================================================
# Application name 00_GLay/src/test folder (test.c/cpp) 
# =========================================================
# APP_TEST  = test_match
# APP_TEST = test_glay
# APP_TEST = test_StalaGraph
APP_TEST = test_glayGraph_$(XILINX_CTRL_MODE)
# APP_TEST = test_glayGraph_emu

# =========================================================
# Application extention ./src/test folder (test.c/cpp) 
# =========================================================
APP_LANG = cpp
# APP_LANG = c
# =========================================================

# =========================================================
# Application name src/algorithms folder openmp/cuda/fpga
# =========================================================
INTEGRATION         = openmp
# INTEGRATION         = ggdl
# =========================================================

# =========================================================
# Nested make calls args for host/device makefiles
# =========================================================
ifeq ($(shell grep -c ^processor /proc/cpuinfo),)
	MAKE_NUM_THREADS = 1
else
	MAKE_NUM_THREADS = $(shell grep -c ^processor /proc/cpuinfo)
endif

MAKE_HOST               = --no-print-directory -C $(ROOT_DIR)/$(APP_DIR)/$(HOST_DIR) -j$(MAKE_NUM_THREADS)
MAKE_DEVICE             = --no-print-directory -C $(ROOT_DIR)/$(APP_DIR)/$(DEVICE_DIR)
# =========================================================

# =========================================================
#                GENERAL DIRECTOIRES HOST               
# =========================================================
ROOT_DIR                = $(shell cd .. ; pwd)
APP_DIR                 = $(shell basename "$(PWD)")
HOST_DIR                = 00_host
DEVICE_DIR              = 01_device
BENCH_DIR               = 02_test_graphs
# =========================================================

ifeq ($(shell cd . ; git log -1 --pretty=format:"%h" 2>/dev/null),)
	GIT_VER = 1
else
	GIT_VER = $(shell cd . ; git log -1 --pretty=format:"%h" 2>/dev/null)
endif

ifeq ($(shell /usr/bin/hostnamectl --transient 2>/dev/null),)
	HOST_NAME  = default
else
	HOST_NAME  = $(shell /usr/bin/hostnamectl --transient 2>/dev/null)
endif

# =========================================================
# CLI Commands                           
# =========================================================
ECHO    := @echo
# =========================================================
# Color coded messages                      
# =========================================================
YELLOW  =\033[0;33m
GREEN   =\033[0;32m
BLUE    =\033[0;34m
RED     =\033[0;31m
NC      =\033[0m
# =========================================================

# =========================================================
#                APP HOST PROPERTIES    
# =========================================================

# =========================================================
# Application name 00_GLay/src/main folder (glay.c) 
# =========================================================
APP  = glay
# =========================================================

# =========================================================
# Application name 00_GLay/src/test folder (test.c/cpp) 
# =========================================================
# APP_TEST  = test_match
# APP_TEST = test_glay
# APP_TEST = test_StalaGraph
APP_TEST = test_glayGraph_$(XILINX_CTRL_MODE)
# APP_TEST = test_glayGraph_emu

# =========================================================
# Application extention ./src/test folder (test.c/cpp) 
# =========================================================
APP_LANG = cpp
# APP_LANG = c
# =========================================================

# =========================================================
# Application name src/algorithms folder openmp/cuda/fpga
# =========================================================
INTEGRATION         = openmp
# INTEGRATION         = ggdl
# =========================================================

# =========================================================
# Nested make calls args for host/device makefiles
# =========================================================
ifeq ($(shell grep -c ^processor /proc/cpuinfo),)
	MAKE_NUM_THREADS = 1
else
	MAKE_NUM_THREADS = $(shell grep -c ^processor /proc/cpuinfo)
endif

MAKE_HOST               = --no-print-directory -C $(ROOT_DIR)/$(APP_DIR)/$(HOST_DIR) -j$(MAKE_NUM_THREADS)
MAKE_DEVICE             = --no-print-directory -C $(ROOT_DIR)/$(APP_DIR)/$(DEVICE_DIR)
# =========================================================
